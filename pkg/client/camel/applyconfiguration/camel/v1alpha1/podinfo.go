/*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// PodInfoApplyConfiguration represents a declarative configuration of the PodInfo type for use
// with apply.
type PodInfoApplyConfiguration struct {
	Name                 *string                                     `json:"name,omitempty"`
	InternalIP           *string                                     `json:"internalIp,omitempty"`
	Status               *string                                     `json:"status,omitempty"`
	Ready                *bool                                       `json:"ready,omitempty"`
	ObservabilityService *ObservabilityServiceInfoApplyConfiguration `json:"observe,omitempty"`
	Runtime              *RuntimeInfoApplyConfiguration              `json:"runtime,omitempty"`
}

// PodInfoApplyConfiguration constructs a declarative configuration of the PodInfo type for use with
// apply.
func PodInfo() *PodInfoApplyConfiguration {
	return &PodInfoApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *PodInfoApplyConfiguration) WithName(value string) *PodInfoApplyConfiguration {
	b.Name = &value
	return b
}

// WithInternalIP sets the InternalIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InternalIP field is set to the value of the last call.
func (b *PodInfoApplyConfiguration) WithInternalIP(value string) *PodInfoApplyConfiguration {
	b.InternalIP = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *PodInfoApplyConfiguration) WithStatus(value string) *PodInfoApplyConfiguration {
	b.Status = &value
	return b
}

// WithReady sets the Ready field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ready field is set to the value of the last call.
func (b *PodInfoApplyConfiguration) WithReady(value bool) *PodInfoApplyConfiguration {
	b.Ready = &value
	return b
}

// WithObservabilityService sets the ObservabilityService field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservabilityService field is set to the value of the last call.
func (b *PodInfoApplyConfiguration) WithObservabilityService(value *ObservabilityServiceInfoApplyConfiguration) *PodInfoApplyConfiguration {
	b.ObservabilityService = value
	return b
}

// WithRuntime sets the Runtime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Runtime field is set to the value of the last call.
func (b *PodInfoApplyConfiguration) WithRuntime(value *RuntimeInfoApplyConfiguration) *PodInfoApplyConfiguration {
	b.Runtime = value
	return b
}
