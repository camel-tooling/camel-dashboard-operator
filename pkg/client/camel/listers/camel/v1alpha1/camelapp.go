/*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	camelv1alpha1 "github.com/camel-tooling/camel-dashboard-operator/pkg/apis/camel/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// CamelAppLister helps list CamelApps.
// All objects returned here must be treated as read-only.
type CamelAppLister interface {
	// List lists all CamelApps in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*camelv1alpha1.CamelApp, err error)
	// CamelApps returns an object that can list and get CamelApps.
	CamelApps(namespace string) CamelAppNamespaceLister
	CamelAppListerExpansion
}

// camelAppLister implements the CamelAppLister interface.
type camelAppLister struct {
	listers.ResourceIndexer[*camelv1alpha1.CamelApp]
}

// NewCamelAppLister returns a new CamelAppLister.
func NewCamelAppLister(indexer cache.Indexer) CamelAppLister {
	return &camelAppLister{listers.New[*camelv1alpha1.CamelApp](indexer, camelv1alpha1.Resource("camelapp"))}
}

// CamelApps returns an object that can list and get CamelApps.
func (s *camelAppLister) CamelApps(namespace string) CamelAppNamespaceLister {
	return camelAppNamespaceLister{listers.NewNamespaced[*camelv1alpha1.CamelApp](s.ResourceIndexer, namespace)}
}

// CamelAppNamespaceLister helps list and get CamelApps.
// All objects returned here must be treated as read-only.
type CamelAppNamespaceLister interface {
	// List lists all CamelApps in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*camelv1alpha1.CamelApp, err error)
	// Get retrieves the CamelApp from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*camelv1alpha1.CamelApp, error)
	CamelAppNamespaceListerExpansion
}

// camelAppNamespaceLister implements the CamelAppNamespaceLister
// interface.
type camelAppNamespaceLister struct {
	listers.ResourceIndexer[*camelv1alpha1.CamelApp]
}
